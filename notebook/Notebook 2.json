{
	"name": "Notebook 2",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "analytics",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "c0bf7ba4-50a5-4446-b766-3fb1bfaa26ce"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/b211b5f1-b80d-480c-bdf0-acf5f4a2050c/resourceGroups/BigData_Huadi/providers/Microsoft.Synapse/workspaces/us2024/bigDataPools/analytics",
				"name": "analytics",
				"type": "Spark",
				"endpoint": "https://us2024.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/analytics",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.4",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"# If you use spark2.4 pool, please replace with `from mmlspark.cognitive import *` instead\n",
					"# Kindly note that spark2.4 pool will be deprecated soon, spark3.x pools are recommended\n",
					"from synapse.ml.cognitive import *\n",
					"from pyspark.sql.functions import col\n",
					"\n",
					"# Load the data into a Spark DataFrame\n",
					"df = spark.sql(\"SELECT * FROM default.yourtablename\")\n",
					"\n",
					"sentiment = (TextSentiment()\n",
					"    .setLinkedService(\"CognitiveServicelast\")\n",
					"    .setOutputCol(\"output\")\n",
					"    .setErrorCol(\"error\")\n",
					"    .setLanguage(\"en\")\n",
					"    .setTextCol(\"cleaned_body\"))\n",
					"\n",
					"results = sentiment.transform(df)\n",
					"\n",
					"# Show the results\n",
					"display(results\n",
					"    .withColumn(\"sentiment\", col(\"output.document.sentiment\"))\n",
					"    .select(\"cleaned_body\", \"sentiment\", \"error\"))"
				],
				"execution_count": 1
			}
		]
	}
}